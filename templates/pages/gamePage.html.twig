{% extends 'base.html.twig' %}

{% block keywords %}
    tic tac toe 
{% endblock %}

{% block title %}
    tic tac toe
{% endblock %}

{% block OpenGraph %}  
    <meta property="og:title" content="tic tac toe"/>
    <meta property="og:description" content="tic tac toe"/>
{% endblock %}    

{% block body %}
    <h1>TIC TAC TOE</h1>
    <p>Please press the button to start or to to reset a game</p>
    <br/>
    <h2>Status</h2>
    <div id="status-container">...</i></div>    
    <br/>
    <br/>
    <button id="btn_create" type="button">Create/reset board</button>
    <div id="board-container">Loading board...</i></div>    
{% endblock %}

{% block footer_scripts %}
    {{ parent() }}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    {% include '/imports/communication.html.twig' only %}
    {% include '/imports/move.html.twig' only %}
    {% include '/imports/board.html.twig' only %}

    <script type="text/javascript">
        const user = '2';
        const board = '1';
        const boardSize = 3;
        const winLength = 3;
        
        renderBoard();
        getPossibleMoves(user);
        
        async function getPossibleMoves(user) {
            let $possiblesMoves = possibleMoves(user);       
        }
        
        async function renderBoard() {
            let htmlSegment = '';
            
            $boardState = await boardState(board);
                          
            let boardSize = $boardState.state[0].length;
            for (let y = 0; y < boardSize; y++) {
                for (let x = 0; x < boardSize; x++) {
                     htmlSegment += `{% include '/components/board_field.html.twig' only %}`
                        .replace('field-x', x)
                        .replace('field-y', y)
                        .replaceAll('field-user', getUserSymbol($boardState.state[x][y]))              
                    
                }
                htmlSegment += '<br style="clear:both;">';
            }
            
            document.getElementById("board-container").innerHTML = htmlSegment;
         
            setTimeout(function () {
                setClick(boardSize, user);
            }, 100);
            
             setTimeout(function () {
                updateStatus(boardSize, user);
            }, 100);
        }
         
        function getUserSymbol(user) {
  
            if (user === 0) {
                return '[ ]';
            }
            
            if (user === '1') {
                return '[x]';
            }
            
            return '[o]';
        }
        
        async function updateStatus() {
            let status = await boardStatus(board);  
                 
            switch (status) {
                case '0':
                    setStatus('...');
                   break;
                case '1': 
                  setStatus('Computer won.');
                  break;
                case '2':
                    setStatus('You won.');
                    break;
                default:
                  setStatus('Something bad happened...');
              }
        }
        
        function setStatus(status) {
            document.getElementById("status-container").innerHTML = status;            
        }
        
        async function setClick(boardSize, user) {
            for (let x = 0; x < boardSize; x++) {
                for (let y = 0; y < boardSize; y++) {
                    document.getElementById('board-field-'+x+'-'+y).addEventListener(
                        "click", 
                        function() {
                            move(user, board, x, y);
                            setTimeout(function () {
                                renderBoard();
                            }, 100);                             
                        }
                    );                   
                }
            }
        }
      
        document.getElementById('btn_create').addEventListener(
            "click", 
            function() {
                create(user, board);
                setTimeout(function () {
                    renderBoard();
                    setStatus('Started');
                }, 100);  
            }
        );
    </script>  
{% endblock footer_scripts %}
